-------------------------------------------------------------------------------
Test set: runners.UpdateExcelTestRunner
-------------------------------------------------------------------------------
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.566 s <<< FAILURE! - in runners.UpdateExcelTestRunner
features/update-excel-data.[1:3] Cập nhật dữ liệu login trong file data.xlsx  Time elapsed: 1.833 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
js failed:
>>>>
01: karate.call('classpath:utils/update-login-data.js')
<<<<
org.graalvm.polyglot.PolyglotException: js failed:
>>>>
01: (function updateLoginData() {
02:     var FileInputStream = Java.type('java.io.FileInputStream');
03:     var FileOutputStream = Java.type('java.io.FileOutputStream');
04:     var XSSFWorkbook = Java.type('org.apache.poi.xssf.usermodel.XSSFWorkbook');
05:     var File = Java.type('java.io.File');
06: 
07:     try {
08:         var filePath = 'src/test/java/data/data.xlsx';
09:         var file = new File(filePath);
10:         var workbook;
11: 
12:         // Mở file Excel hiện có
13:         if (file.exists()) {
14:             var fis = new FileInputStream(file);
15:             workbook = new XSSFWorkbook(fis);
16:             fis.close();
17:         } else {
18:             karate.log('File không tồn tại: ' + filePath);
19:             return false;
20:         }
21: 
22:         // Tạo hoặc lấy sheet "login"
23:         var loginSheet = workbook.getSheet('login');
24:         if (!loginSheet) {
25:             loginSheet = workbook.createSheet('login');
26:         }
27: 
28:         // Xóa tất cả dữ liệu hiện có (trừ header)
29:         var lastRowNum = loginSheet.getLastRowNum();
30:         for (var i = lastRowNum; i >= 1; i--) {
31:             var row = loginSheet.getRow(i);
32:             if (row != null) {
33:                 loginSheet.removeRow(row);
34:             }
35:         }
36: 
37:         // Tạo header row nếu chưa có
38:         var headerRow = loginSheet.getRow(0);
39:         if (!headerRow) {
40:             headerRow = loginSheet.createRow(0);
41:         }
42:         var headers = ['email', 'password', 'expectedStatus', 'expectedResult', 'testDescription', 'responseStatus', 'result'];
43: 
44:         for (var i = 0; i < headers.length; i++) {
45:             var cell = headerRow.getCell(i);
46:             if (!cell) {
47:                 cell = headerRow.createCell(i);
48:             }
49:             cell.setCellValue(headers[i]);
50:         }
51: 
52:         // Dữ liệu đăng nhập mới theo yêu cầu
53:         var loginData = [
54:             {
55:                 email: 'nam@gmail.com',
56:                 password: '123456',
57:                 expectedStatus: 200,
58:                 expectedResult: 'success',
59:                 testDescription: 'Valid login credentials - Nam account'
60:             },
61:             {
62:                 email: 'nam@gmail.com',
63:                 password: '',
64:                 expectedStatus: 400,
65:                 expectedResult: 'Missing password',
66:                 testDescription: 'Login without password - Nam account'
67:             },
68:             {
69:                 email: 'invalid@gmail.com',
70:                 password: '123456',
71:                 expectedStatus: 400,
72:                 expectedResult: 'user not found',
73:                 testDescription: 'Login with invalid email'
74:             },
75:             {
76:                 email: '',
77:                 password: '123456',
78:                 expectedStatus: 400,
79:                 expectedResult: 'Missing email or username',
80:                 testDescription: 'Login without email'
81:             },
82:             {
83:                 email: 'nam@gmail.com',
84:                 password: 'wrongpassword',
85:                 expectedStatus: 400,
86:                 expectedResult: 'user not found',
87:                 testDescription: 'Login with wrong password - Nam account'
88:             },
89:             {
90:                 email: 'admin@gmail.com',
91:                 password: 'admin123',
92:                 expectedStatus: 200,
93:                 expectedResult: 'success',
94:                 testDescription: 'Valid login credentials - Admin account'
95:             },
96:             {
97:                 email: 'user@gmail.com',
98:                 password: 'user123',
99:                 expectedStatus: 200,
100:                 expectedResult: 'success',
101:                 testDescription: 'Valid login credentials - User account'
102:             },
103:             {
104:                 email: 'test@gmail.com',
105:                 password: 'test123',
106:                 expectedStatus: 200,
107:                 expectedResult: 'success',
108:                 testDescription: 'Valid login credentials - Test account'
109:             },
110:             {
111:                 email: 'user@',
112:                 password: '123456',
113:                 expectedStatus: 400,
114:                 expectedResult: 'Invalid email format',
115:                 testDescription: 'TC: Email không hợp lệ - thiếu domain'
116:             },
117:             {
118:                 email: 'user.gmail.com',
119:                 password: '123456',
120:                 expectedStatus: 400,
121:                 expectedResult: 'Invalid email format',
122:                 testDescription: 'TC: Email không hợp lệ - thiếu ký tự @'
123:             },
124:             {
125:                 email: '@gmail.com',
126:                 password: '123456',
127:                 expectedStatus: 400,
128:                 expectedResult: 'Invalid email format',
129:                 testDescription: 'TC: Email không hợp lệ - thiếu phần username'
130:             },
131:             {
132:                 email: 'nam@gmail.com',
133:                 password: '12',
134:                 expectedStatus: 400,
135:                 expectedResult: 'Password must be between 6 and 20 characters',
136:                 testDescription: 'TC: Password quá ngắn'
137:             },
138:             {
139:                 email: 'nam@gmail.com',
140:                 password: 'verylongpasswordthatexceedsthenormallimitsforpasswordlength123456789',
141:                 expectedStatus: 400,
142:                 expectedResult: 'Password must be between 6 and 20 characters',
143:                 testDescription: 'TC: Password quá dài'
144:             },
145:             {
146:                 email: "' OR '1'='1",
147:                 password: '123456',
148:                 expectedStatus: 400,
149:                 expectedResult: 'Invalid input',
150:                 testDescription: 'TC: SQL Injection trong email'
151:             },
152:             {
153:                 email: 'nam@gmail.com',
154:                 password: "' OR '1'='1",
155:                 expectedStatus: 400,
156:                 expectedResult: 'Invalid input',
157:                 testDescription: 'TC: SQL Injection trong password'
158:             },
159:             {
160:                 email: '<script>alert("xss")</script>@gmail.com',
161:                 password: '123456',
162:                 expectedStatus: 400,
163:                 expectedResult: 'Invalid input',
164:                 testDescription: 'TC: XSS trong email'
165:             },
166:             {
167:                 email: 'nam@gmail.com',
168:                 password: '<script>alert("xss")</script>',
169:                 expectedStatus: 400,
170:                 expectedResult: 'Invalid input',
171:                 testDescription: 'TC: XSS trong password'
172:             }
173:         ];
174: 
175:         // Thêm dữ liệu vào sheet
176:         for (var i = 0; i < loginData.length; i++) {
177:             var row = loginSheet.createRow(i + 1);
178:             var data = loginData[i];
179: 
180:             row.createCell(0).setCellValue(data.email);
181:             row.createCell(1).setCellValue(data.password);
182:             row.createCell(2).setCellValue(data.expectedStatus);
183:             row.createCell(3).setCellValue(data.expectedResult);
184:             row.createCell(4).setCellValue(data.testDescription);
185:             row.createCell(5).setCellValue(''); // responseStatus - sẽ được điền sau
186:             row.createCell(6).setCellValue(''); // result - sẽ được điền sau
187:         }
188: 
189:         // Lưu file
190:         var fos = new FileOutputStream(file);
191:         workbook.write(fos);
192:         fos.close();
193:         workbook.close();
194: 
195:         karate.log('Đã cập nhật dữ liệu đăng nhập trong file Excel thành công!');
196:         karate.log('Dữ liệu login chính: nam@gmail.com / 123456');
197:         karate.log('Tổng số test cases: ' + loginData.length);
198: 
199:         return true;
200: 
201:     } catch (e) {
202:         karate.log('Lỗi khi cập nhật Excel: ' + e.message);
203:         return false;
204:     }
205: }
206: 
207: // Gọi function
208: updateLoginData(); )
<<<<
org.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:208:0 Expected ) but found updateLoginData
updateLoginData(); )
^
Unnamed:208:19 Expected ; but found )
updateLoginData(); )
                   ^

- org.graalvm.polyglot.Context.eval(Context.java:425)
- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)
- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)
- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:59)
- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:164)
- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:151)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:253)
- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1288)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:59)
- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:164)
- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:151)
- <js>.:program(Unnamed:1)

classpath:features/update-excel-data.feature:4
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at com.intuit.karate.junit5.FeatureNode.lambda$next$1(FeatureNode.java:86)
	at org.junit.jupiter.engine.descriptor.DynamicTestTestDescriptor.lambda$execute$0(DynamicTestTestDescriptor.java:53)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.api.extension.InvocationInterceptor.interceptDynamicTest(InvocationInterceptor.java:167)
	at org.junit.jupiter.api.extension.InvocationInterceptor.interceptDynamicTest(InvocationInterceptor.java:184)
	at org.junit.jupiter.engine.descriptor.DynamicTestTestDescriptor.lambda$execute$1(DynamicTestTestDescriptor.java:61)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptorCall.lambda$ofVoid$0(InvocationInterceptorChain.java:78)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.descriptor.DynamicTestTestDescriptor.execute(DynamicTestTestDescriptor.java:60)
	at org.junit.jupiter.engine.descriptor.DynamicTestTestDescriptor.execute(DynamicTestTestDescriptor.java:32)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEachOrdered(ReferencePipeline.java:601)
	at org.junit.jupiter.engine.descriptor.DynamicContainerTestDescriptor.execute(DynamicContainerTestDescriptor.java:67)
	at org.junit.jupiter.engine.descriptor.DynamicContainerTestDescriptor.execute(DynamicContainerTestDescriptor.java:33)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at java.base/java.util.Optional.ifPresent(Optional.java:178)
	at org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor.lambda$invokeTestMethod$1(TestFactoryTestDescriptor.java:108)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor.invokeTestMethod(TestFactoryTestDescriptor.java:95)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)

